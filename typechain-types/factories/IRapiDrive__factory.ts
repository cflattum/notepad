/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IRapiDrive, IRapiDriveInterface } from "../IRapiDrive";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashedDriver",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeExited",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tollIdentifier",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tollCost",
        type: "uint256",
      },
    ],
    name: "offRampExitedTollPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashedDriver",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeEntered",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tollIdentifier",
        type: "string",
      },
    ],
    name: "onRampEntered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "drive",
        type: "address",
      },
    ],
    name: "getDriver",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "trips",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "inSystem",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timeIn",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "awarded",
            type: "bool",
          },
        ],
        internalType: "struct IRapiDrive.driver",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tollIdentifier",
        type: "string",
      },
    ],
    name: "tollEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tollIdentifier",
        type: "string",
      },
    ],
    name: "tollExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IRapiDrive__factory {
  static readonly abi = _abi;
  static createInterface(): IRapiDriveInterface {
    return new utils.Interface(_abi) as IRapiDriveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRapiDrive {
    return new Contract(address, _abi, signerOrProvider) as IRapiDrive;
  }
}
