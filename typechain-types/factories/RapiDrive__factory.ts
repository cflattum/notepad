/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RapiDrive, RapiDriveInterface } from "../RapiDrive";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashedDriver",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeExited",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tollIdentifier",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tollCost",
        type: "uint256",
      },
    ],
    name: "offRampExitedTollPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashedDriver",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeEntered",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tollIdentifier",
        type: "string",
      },
    ],
    name: "onRampEntered",
    type: "event",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RPDtoken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "drive",
        type: "address",
      },
    ],
    name: "getDriver",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "driver",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "trips",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "inSystem",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timeIn",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "awarded",
            type: "bool",
          },
        ],
        internalType: "struct IRapiDrive.driver",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rpdAddy",
        type: "address",
      },
    ],
    name: "setRPDAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tollIdentifier",
        type: "string",
      },
    ],
    name: "tollEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tollIdentifier",
        type: "string",
      },
    ],
    name: "tollExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261009560201b60201c565b61009d60201b60201c565b60008060146101000a81548160ff02191690831515021790555030600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506064600281905550610161565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6117f1806101706000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637c0b8de2116100715780637c0b8de21461013e5780638da5cb5b1461015c57806393a770be1461017a578063d30d328e14610184578063e7bf3826146101a2578063f2fde38b146101be576100a9565b8063082bb105146100ae57806335d1ea2b146100ca5780635c975abb146100e657806365c301ab14610104578063715018a614610134575b600080fd5b6100c860048036038101906100c39190610f7f565b6101da565b005b6100e460048036038101906100df9190610f56565b6104b6565b005b6100ee610576565b6040516100fb91906112f5565b60405180910390f35b61011e60048036038101906101199190610f56565b61058c565b60405161012b919061145e565b60405180910390f35b61013c61069b565b005b610146610723565b6040516101539190611479565b60405180910390f35b610164610728565b6040516101719190611230565b60405180910390f35b610182610751565b005b61018c610816565b6040516101999190611479565b60405180910390f35b6101bc60048036038101906101b79190610f7f565b61081b565b005b6101d860048036038101906101d39190610f56565b610cd1565b005b6101e2610576565b15610222576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610219906113be565b60405180910390fd5b678ac7230489e80000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e3360006040518363ffffffff1660e01b815260040161028892919061124b565b60206040518083038186803b1580156102a057600080fd5b505afa1580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d89190610fc4565b11610318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030f906113fe565b60405180910390fd5b60001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160169054906101000a900460ff161515146103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a59061143e565b60405180910390fd5b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160166101000a81548160ff0219169083151502179055507f26cf03c4d7bc7b252ff06c262eb810a30ee37d868ee43834a107d2e4d87e02fc336040516020016104819190611215565b604051602081830303815290604052805190602001204284846040516104aa9493929190611310565b60405180910390a15050565b6104be610dc9565b73ffffffffffffffffffffffffffffffffffffffff166104dc610728565b73ffffffffffffffffffffffffffffffffffffffff1614610532576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610529906113de565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060149054906101000a900460ff16905090565b610594610e95565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900461ffff1661ffff1661ffff1681526020016000820160169054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900460ff1615151515815250509050919050565b6106a3610dc9565b73ffffffffffffffffffffffffffffffffffffffff166106c1610728565b73ffffffffffffffffffffffffffffffffffffffff1614610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e906113de565b60405180910390fd5b6107216000610dd1565b565b600181565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610759610dc9565b73ffffffffffffffffffffffffffffffffffffffff16610777610728565b73ffffffffffffffffffffffffffffffffffffffff16146107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c4906113de565b60405180910390fd5b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550565b600081565b610823610576565b15610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a906113be565b60405180910390fd5b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160169054906101000a900460ff161515146108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f09061141e565b60405180910390fd5b6000600254600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261094c9190611548565b61095691906114ee565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320ee0a25336000846040518463ffffffff1660e01b81526004016109b8939291906112be565b600060405180830381600087803b1580156109d257600080fd5b505af11580156109e6573d6000803e3d6000fd5b505050506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160166101000a81548160ff02191690831515021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160148282829054906101000a900461ffff16610aa491906114b6565b92506101000a81548161ffff021916908361ffff1602179055506014600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900461ffff1661ffff16148015610b75575060001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161515145b15610c675760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166355441a4b336001806040518463ffffffff1660e01b8152600401610c3493929190611274565b600060405180830381600087803b158015610c4e57600080fd5b505af1158015610c62573d6000803e3d6000fd5b505050505b7f56dcefdbbc5634f2a941b8dc2f65549a5d76bdca7a13b1334914ac2f16a887c433604051602001610c999190611215565b6040516020818303038152906040528051906020012042858585604051610cc4959493929190611350565b60405180910390a1505050565b610cd9610dc9565b73ffffffffffffffffffffffffffffffffffffffff16610cf7610728565b73ffffffffffffffffffffffffffffffffffffffff1614610d4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d44906113de565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610dbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db49061139e565b60405180910390fd5b610dc681610dd1565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600061ffff168152602001600015158152602001600081526020016000151581525090565b600081359050610ef18161178d565b92915050565b60008083601f840112610f0957600080fd5b8235905067ffffffffffffffff811115610f2257600080fd5b602083019150836001820283011115610f3a57600080fd5b9250929050565b600081519050610f50816117a4565b92915050565b600060208284031215610f6857600080fd5b6000610f7684828501610ee2565b91505092915050565b60008060208385031215610f9257600080fd5b600083013567ffffffffffffffff811115610fac57600080fd5b610fb885828601610ef7565b92509250509250929050565b600060208284031215610fd657600080fd5b6000610fe484828501610f41565b91505092915050565b610ff68161157c565b82525050565b6110058161157c565b82525050565b61101c6110178261157c565b6115fd565b82525050565b61102b8161158e565b82525050565b61103a8161158e565b82525050565b6110498161159a565b82525050565b611058816115dc565b82525050565b600061106a83856114a5565b93506110778385846115ee565b61108083611650565b840190509392505050565b60006110986026836114a5565b91506110a38261166e565b604082019050919050565b60006110bb6010836114a5565b91506110c6826116bd565b602082019050919050565b60006110de6020836114a5565b91506110e9826116e6565b602082019050919050565b6000611101600e836114a5565b915061110c8261170f565b602082019050919050565b6000611124600083611494565b915061112f82611738565b600082019050919050565b60006111476010836114a5565b91506111528261173b565b602082019050919050565b600061116a6014836114a5565b915061117582611764565b602082019050919050565b60a0820160008201516111966000850182610fed565b5060208201516111a960208501826111e8565b5060408201516111bc6040850182611022565b5060608201516111cf60608501826111f7565b5060808201516111e26080850182611022565b50505050565b6111f1816115a4565b82525050565b611200816115d2565b82525050565b61120f816115d2565b82525050565b6000611221828461100b565b60148201915081905092915050565b60006020820190506112456000830184610ffc565b92915050565b60006040820190506112606000830185610ffc565b61126d6020830184611206565b9392505050565b60006080820190506112896000830186610ffc565b6112966020830185611206565b6112a3604083018461104f565b81810360608301526112b481611117565b9050949350505050565b60006060820190506112d36000830186610ffc565b6112e06020830185611206565b6112ed6040830184611206565b949350505050565b600060208201905061130a6000830184611031565b92915050565b60006060820190506113256000830187611040565b6113326020830186611206565b818103604083015261134581848661105e565b905095945050505050565b60006080820190506113656000830188611040565b6113726020830187611206565b818103604083015261138581858761105e565b90506113946060830184611206565b9695505050505050565b600060208201905081810360008301526113b78161108b565b9050919050565b600060208201905081810360008301526113d7816110ae565b9050919050565b600060208201905081810360008301526113f7816110d1565b9050919050565b60006020820190508181036000830152611417816110f4565b9050919050565b600060208201905081810360008301526114378161113a565b9050919050565b600060208201905081810360008301526114578161115d565b9050919050565b600060a0820190506114736000830184611180565b92915050565b600060208201905061148e6000830184611206565b92915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006114c1826115a4565b91506114cc836115a4565b92508261ffff038211156114e3576114e2611621565b5b828201905092915050565b60006114f9826115d2565b9150611504836115d2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561153d5761153c611621565b5b828202905092915050565b6000611553826115d2565b915061155e836115d2565b92508282101561157157611570611621565b5b828203905092915050565b6000611587826115b2565b9050919050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115e7826115d2565b9050919050565b82818337600083830152505050565b60006116088261160f565b9050919050565b600061161a82611661565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f7420656e6f75676820525044000000000000000000000000000000000000600082015250565b50565b7f4e6f74206f6e20746f6c6c20726f616400000000000000000000000000000000600082015250565b7f416c7265616479206f6e20746f6c6c20726f6164000000000000000000000000600082015250565b6117968161157c565b81146117a157600080fd5b50565b6117ad816115d2565b81146117b857600080fd5b5056fea2646970667358221220766df57e1c1c7aa0c70b52936bacc81dff9b9ec9e02568aee7d29034b06028b664736f6c63430008040033";

type RapiDriveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RapiDriveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RapiDrive__factory extends ContractFactory {
  constructor(...args: RapiDriveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RapiDrive";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RapiDrive> {
    return super.deploy(overrides || {}) as Promise<RapiDrive>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RapiDrive {
    return super.attach(address) as RapiDrive;
  }
  connect(signer: Signer): RapiDrive__factory {
    return super.connect(signer) as RapiDrive__factory;
  }
  static readonly contractName: "RapiDrive";
  public readonly contractName: "RapiDrive";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RapiDriveInterface {
    return new utils.Interface(_abi) as RapiDriveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RapiDrive {
    return new Contract(address, _abi, signerOrProvider) as RapiDrive;
  }
}
