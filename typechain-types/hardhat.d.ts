/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Burnable__factory>;
    getContractFactory(
      name: "ERC1155Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Pausable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "DeBay",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DeBay__factory>;
    getContractFactory(
      name: "IDeBay",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDeBay__factory>;
    getContractFactory(
      name: "IRapiDrive",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRapiDrive__factory>;
    getContractFactory(
      name: "RapiDrive",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RapiDrive__factory>;
    getContractFactory(
      name: "IRapiDrive",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRapiDrive__factory>;
    getContractFactory(
      name: "RapiDrive1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RapiDrive1155__factory>;
    getContractFactory(
      name: "RPD",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RPD__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Burnable>;
    getContractAt(
      name: "ERC1155Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Pausable>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "DeBay",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DeBay>;
    getContractAt(
      name: "IDeBay",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDeBay>;
    getContractAt(
      name: "IRapiDrive",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRapiDrive>;
    getContractAt(
      name: "RapiDrive",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RapiDrive>;
    getContractAt(
      name: "IRapiDrive",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRapiDrive>;
    getContractAt(
      name: "RapiDrive1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RapiDrive1155>;
    getContractAt(
      name: "RPD",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RPD>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
